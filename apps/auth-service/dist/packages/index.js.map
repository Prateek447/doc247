{
  "version": 3,
  "sources": ["../../../../packages/index.ts"],
  "sourcesContent": ["export class AppError extends Error {\n\n    public readonly statusCode: number;\n    public readonly isOperational: boolean;\n    public readonly details: any;\n\n    constructor( message: string, statusCode: number, isOperational: true, details?: any ){\n        super(message);\n        this.statusCode = statusCode;\n        this.isOperational = isOperational;\n        this.details = details; \n        Error.captureStackTrace(this);\n    }\n}\n\n\nexport class NotFoundError extends AppError {\n    constructor(message: string = 'Resource not found', details?: any) {\n        super(message, 404, true, details);\n        this.name = 'NotFoundError';\n    }\n}\nexport class BadRequestError extends AppError {\n    constructor(message: string = 'Bad request', details?: any) {\n        super(message, 400, true, details);\n        this.name = 'BadRequestError';\n    }\n}\n\nexport class ValidationError extends AppError {\n    constructor(message: string = 'Validation error', details?: any) {\n        super(message, 422, true, details);\n        this.name = 'ValidationError';\n    }\n}\nexport class UnauthorizedError extends AppError {\n    constructor(message: string = 'Unauthorized', details?: any) {\n        super(message, 401, true, details);\n        this.name = 'UnauthorizedError';\n    }\n}\nexport class ForbiddenError extends AppError {\n    constructor(message: string = 'Forbidden', details?: any) {\n        super(message, 403, true, details);\n        this.name = 'ForbiddenError';\n    }\n}\n\nexport class DatabaseError extends AppError {\n    constructor(message: string = 'Database error', details?: any) {\n        super(message, 500, true, details);\n        this.name = 'DatabaseError';\n    }\n}\n\nexport class RateLimitError extends AppError {\n    constructor(message: string = 'Rate limit exceeded', details?: any) {\n        super(message, 429, true, details);\n        this.name = 'RateLimitError';\n    }\n}\n\n"],
  "mappings": ";;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAO,MAAM,iBAAiB,MAAM;AAAA,EAEhB;AAAA,EACA;AAAA,EACA;AAAA,EAEhB,YAAa,SAAiB,YAAoB,eAAqB,SAAe;AAClF,UAAM,OAAO;AACb,SAAK,aAAa;AAClB,SAAK,gBAAgB;AACrB,SAAK,UAAU;AACf,UAAM,kBAAkB,IAAI;AAAA,EAChC;AACJ;AAGO,MAAM,sBAAsB,SAAS;AAAA,EACxC,YAAY,UAAkB,sBAAsB,SAAe;AAC/D,UAAM,SAAS,KAAK,MAAM,OAAO;AACjC,SAAK,OAAO;AAAA,EAChB;AACJ;AACO,MAAM,wBAAwB,SAAS;AAAA,EAC1C,YAAY,UAAkB,eAAe,SAAe;AACxD,UAAM,SAAS,KAAK,MAAM,OAAO;AACjC,SAAK,OAAO;AAAA,EAChB;AACJ;AAEO,MAAM,wBAAwB,SAAS;AAAA,EAC1C,YAAY,UAAkB,oBAAoB,SAAe;AAC7D,UAAM,SAAS,KAAK,MAAM,OAAO;AACjC,SAAK,OAAO;AAAA,EAChB;AACJ;AACO,MAAM,0BAA0B,SAAS;AAAA,EAC5C,YAAY,UAAkB,gBAAgB,SAAe;AACzD,UAAM,SAAS,KAAK,MAAM,OAAO;AACjC,SAAK,OAAO;AAAA,EAChB;AACJ;AACO,MAAM,uBAAuB,SAAS;AAAA,EACzC,YAAY,UAAkB,aAAa,SAAe;AACtD,UAAM,SAAS,KAAK,MAAM,OAAO;AACjC,SAAK,OAAO;AAAA,EAChB;AACJ;AAEO,MAAM,sBAAsB,SAAS;AAAA,EACxC,YAAY,UAAkB,kBAAkB,SAAe;AAC3D,UAAM,SAAS,KAAK,MAAM,OAAO;AACjC,SAAK,OAAO;AAAA,EAChB;AACJ;AAEO,MAAM,uBAAuB,SAAS;AAAA,EACzC,YAAY,UAAkB,uBAAuB,SAAe;AAChE,UAAM,SAAS,KAAK,MAAM,OAAO;AACjC,SAAK,OAAO;AAAA,EAChB;AACJ;",
  "names": []
}
